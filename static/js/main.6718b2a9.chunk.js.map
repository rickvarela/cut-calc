{"version":3,"sources":["App.module.css","components/CutList.module.css","components/CutList.js","utils/utils.js","components/MemberList.js","components/StockList.js","App.js","reportWebVitals.js","index.js","components/MemberList.module.css","components/StockList.module.css"],"names":["module","exports","CutList","cutMembers","stockMember","useState","cutState","setCutState","className","styles","runCutList","sortCutMembers","slice","sort","a","b","length","totalCutMembers","member","i","qty","unshift","index","totalStockMembers","push","id","nanoid","capacity","cutMember","calcCutList","CutListHeader","onClick","CutListDisplay","componentRef","useRef","myRef","getDimensions","width","current","offsetWidth","height","offsetHeight","dimensions","setDimensions","useEffect","handleResize","window","addEventListener","removeEventListener","useContainerDimensions","DISPLAY_PROPS","STOCK_HEIGHT","GAP_HEIGHT","SCALE_FACTOR","X","Y","scaleAdjust45","ref","viewBox","map","CutListMember","memberScaleFactor","xCord","membersDisplayList","displayID","toString","x","y","fontSize","fill","stroke","vectorEffect","MemberList","actions","MemberBody","MemberHeader","addCutMember","MemberTable","MemberRow","MemberTableID","type","step","MemberTableItem","value","onChange","event","updateCutMembers","parseInt","target","MemberTableDelete","removeCutMember","StockList","StockBody","StockHeader","StockTable","StockTableItem","updateStockMember","initialData","AppHeader","App","setCutMembers","setStockMember","newCutMember","newCutMembers","newStockMember","deleteCutMember","console","log","filter","AppMain","AppMenu","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6718b2a9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3xFrb\",\"AppMain\":\"App_AppMain__3Llhe\",\"AppMenu\":\"App_AppMenu__2gkra\",\"AppHeader\":\"App_AppHeader__GqCOk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CutList\":\"CutList_CutList__3fKwK\",\"CutListHeader\":\"CutList_CutListHeader__2x7uZ\",\"CutListDisplay\":\"CutList_CutListDisplay__1SWaA\"};","import { useEffect, useRef, useState } from 'react'\r\nimport { calcCutList, useContainerDimensions } from '../utils/utils'\r\n\r\nimport styles from './CutList.module.css'\r\n\r\nexport const CutList = ({cutMembers, stockMember}) => {\r\n    const [cutState, setCutState] = useState([])\r\n\r\n    const handelRunCutList = () => {\r\n        setCutState(calcCutList(cutMembers, stockMember))\r\n    }\r\n\r\n    return (\r\n        <div className={styles.CutList}>\r\n            <CutListHeader runCutList={handelRunCutList}/>\r\n            <CutListDisplay cutState={cutState} key='cut-list-display'/>\r\n        </div> \r\n    )\r\n}\r\n\r\nconst CutListHeader = ({runCutList}) => {\r\n    return (\r\n        <div className={styles.CutListHeader}>\r\n            <div>Cut List</div>\r\n            <button onClick={runCutList}>CALC</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst CutListDisplay = ({cutState}) => {\r\n    const componentRef = useRef()\r\n    const { width, height } = useContainerDimensions(componentRef)\r\n\r\n    const DISPLAY_PROPS = {\r\n        STOCK_HEIGHT: 5,\r\n        GAP_HEIGHT: 2,\r\n        SCALE_FACTOR: 100 / width,\r\n        X: 5,\r\n        Y: 5\r\n    } \r\n\r\n    const scaleAdjust45 = (length) => {\r\n        if (5 / DISPLAY_PROPS.SCALE_FACTOR < 45) {\r\n            return DISPLAY_PROPS.SCALE_FACTOR * length * 9\r\n        } else {\r\n            return length\r\n        }\r\n    }\r\n\r\n    const scaleAdjust = (length) => {\r\n            return DISPLAY_PROPS.SCALE_FACTOR * length * 9\r\n    }\r\n\r\n    return (\r\n        <div className={styles.CutListDisplay} ref={componentRef}>\r\n            <svg width='100%' viewBox={`0 0 100 ${DISPLAY_PROPS.Y + cutState.length * (scaleAdjust45(5) + scaleAdjust45(2))}`} >\r\n            {cutState.map((stockMember, index) => \r\n                <CutListMember stockMember={stockMember} key={stockMember.id} index={index} DISPLAY_PROPS={DISPLAY_PROPS} width={width} scaleAdjust45={scaleAdjust45} />\r\n            )}\r\n            </svg>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst CutListMember = ({stockMember, index, DISPLAY_PROPS, width, scaleAdjust45}) => {\r\n\r\n    const memberScaleFactor = 90.0 / stockMember.length\r\n    \r\n    let xCord = DISPLAY_PROPS.X\r\n    let membersDisplayList = []\r\n\r\n    const displayID = (cutMember) => {\r\n        let memberLength = (cutMember.length * memberScaleFactor) / DISPLAY_PROPS.SCALE_FACTOR\r\n        let textLength = 25 + cutMember.index.toString().length * 25\r\n\r\n        return (memberLength > textLength)\r\n    }\r\n\r\n    for (let cutMember of stockMember.cutMembers) {\r\n        membersDisplayList.push(\r\n            <g key={cutMember.id}>\r\n                {displayID(cutMember) && <text x={xCord + 0.5} y={DISPLAY_PROPS.Y + scaleAdjust45(4.5) + (scaleAdjust45(5) + scaleAdjust45(2)) * index} fontSize={DISPLAY_PROPS.SCALE_FACTOR * 32} >#{cutMember.index}</text>}\r\n                <rect x={xCord} y={DISPLAY_PROPS.Y + (scaleAdjust45(5) + scaleAdjust45(2)) * index} width={cutMember.length * memberScaleFactor} height={scaleAdjust45(5)} fill='none' stroke='#3891A6' vectorEffect='non-scaling-stroke'/>\r\n            </g>\r\n        )\r\n        xCord += cutMember.length * memberScaleFactor\r\n    }\r\n\r\n    return [\r\n        <rect key={stockMember.id} x=\"5\" y={DISPLAY_PROPS.Y + (scaleAdjust45(5) + scaleAdjust45(2)) * index} width=\"90\" height={scaleAdjust45(5)} fill='#E0E1E1' stroke='#CBCDCD' vectorEffect='non-scaling-stroke' />,\r\n        ...membersDisplayList\r\n    ]\r\n}","import { nanoid } from 'nanoid'\r\nimport { useState, useEffect } from 'react'\r\n\r\nexport const calcCutList = (cutMembers, stockMember) => {\r\n    const sortCutMembers = cutMembers.slice(0).sort((a,b) => a.length > b.length ? 1 : -1)\r\n\r\n    let totalCutMembers = []\r\n    for (let member of sortCutMembers) {\r\n        for (let i = 0; i < member.qty; i++) {\r\n            totalCutMembers.unshift({index: member.index, length: member.length})\r\n        }\r\n    }\r\n\r\n    let totalStockMembers = []\r\n    for (let i = 0; i < stockMember.qty; i++) {\r\n        totalStockMembers.push({id: nanoid(), index: stockMember.index, length: stockMember.length, capacity: stockMember.length, cutMembers: []})\r\n    }\r\n\r\n    for (let cutMember of totalCutMembers) {\r\n        for (let stockMember of totalStockMembers) {\r\n            if (cutMember.length <= stockMember.capacity) {\r\n                stockMember.cutMembers.push({\r\n                    ...cutMember,\r\n                    id: nanoid()\r\n                })\r\n                stockMember.capacity -= cutMember.length\r\n                break\r\n            }\r\n        }\r\n    }\r\n    return totalStockMembers\r\n}\r\n\r\nexport const useContainerDimensions = myRef => {\r\n    const getDimensions = () => ({\r\n      width: myRef.current.offsetWidth,\r\n      height: myRef.current.offsetHeight\r\n    })\r\n  \r\n    const [dimensions, setDimensions] = useState({ width: 1, height: 1 })\r\n  \r\n    useEffect(() => {\r\n      const handleResize = () => {\r\n        setDimensions(getDimensions())\r\n      }\r\n  \r\n      if (myRef.current) {\r\n        setDimensions(getDimensions())\r\n      }\r\n  \r\n      window.addEventListener(\"resize\", handleResize)\r\n  \r\n      return () => {\r\n        window.removeEventListener(\"resize\", handleResize)\r\n      }\r\n    }, [myRef])\r\n  \r\n    return dimensions;\r\n};","import styles from './MemberList.module.css'\r\n\r\nexport const MemberList = ({ cutMembers, actions }) => {\r\n    return (\r\n        <div className={styles.MemberList}>\r\n            <MemberHeader actions={actions}/>\r\n            <div className={styles.MemberBody}>\r\n            <MemberTable cutMembers={cutMembers} actions={actions}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst MemberHeader = ({actions}) => {\r\n    return (\r\n        <div className={styles.MemberHeader}>\r\n            <div>Members To Be Cut</div>\r\n            <button onClick={actions.addCutMember}>ADD ROW</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst MemberTable = ({ cutMembers, actions }) => {\r\n    return (\r\n        <table className={styles.MemberTable}>\r\n            <thead>\r\n                <tr>\r\n                    <th>#</th>\r\n                    <th>Length</th>\r\n                    <th>Quanity</th>\r\n                    <th></th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {cutMembers.map((cutMember, index) => \r\n                    <MemberRow cutMember={cutMember} actions={actions} index={index + 1} key={cutMember.id}/>\r\n                )}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\nconst MemberRow = ({cutMember, actions, index}) => {\r\n\r\n    const handelLengthChange = event => {\r\n        actions.updateCutMembers({\r\n            ...cutMember,\r\n            length: parseInt(event.target.value)\r\n        })\r\n    }\r\n\r\n    const handelQtyChange = event => {\r\n        actions.updateCutMembers({\r\n            ...cutMember,\r\n            qty: parseInt(event.target.value)\r\n        })\r\n    }\r\n\r\n    const handelRemoveCutMember = () => {\r\n        actions.removeCutMember(cutMember)\r\n    }\r\n\r\n    return (\r\n        <tr>\r\n            <td className={styles.MemberTableID}>{index}</td>\r\n            <td><input type='number' step='any' className={styles.MemberTableItem} value={cutMember.length} onChange={handelLengthChange} /></td>\r\n            <td><input type='number' step='any' className={styles.MemberTableItem} value={cutMember.qty} onChange={handelQtyChange}/></td>\r\n            <td className={styles.MemberTableDelete}><button className={styles.MemberTableItem} onClick={handelRemoveCutMember}>DELETE</button></td>\r\n        </tr>\r\n    )\r\n}","import styles from './StockList.module.css'\r\n\r\nexport const StockList = ({stockMember, actions}) => {\r\n    return (\r\n        <div className={styles.StockList}>\r\n            <StockHeader />\r\n            <div className={styles.StockBody}>\r\n                <StockTable stockMember={stockMember} actions={actions}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst StockHeader = () => {\r\n\r\n    return (\r\n        <div className={styles.StockHeader}>\r\n            <div>Stock Member</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst StockTable = ({stockMember, actions}) => {\r\n\r\n    const handelLengthChange = event => {\r\n        actions.updateStockMember({\r\n            ...stockMember,\r\n            length: parseInt(event.target.value)\r\n        })\r\n    }\r\n\r\n    const handelQtyChange = event => {\r\n        actions.updateStockMember({\r\n            ...stockMember,\r\n            qty: parseInt(event.target.value)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <table className={styles.StockTable}>\r\n            <thead>\r\n                <tr>\r\n                    <th>Length</th>\r\n                    <th>Quanity</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr>\r\n                    <td><input type='number' className={styles.StockTableItem} value={stockMember.length} onChange={handelLengthChange} /></td>\r\n                    <td><input type='number' className={styles.StockTableItem} value={stockMember.qty} onChange={handelQtyChange}/></td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    )\r\n}","import { useState } from 'react'\nimport { nanoid } from 'nanoid'\n\nimport { CutList } from './components/CutList'\nimport { MemberList } from './components/MemberList'\nimport { StockList } from './components/StockList'\n\nimport styles from './App.module.css'\n\nconst initialData = {\n  cutMembers: [\n    {\n      id: nanoid(),\n      index: 1,\n      length: 12,\n      qty: 3\n    },\n    {\n      id: nanoid(),\n      index: 2,\n      length: 22,\n      qty: 10\n    }\n  ],\n  stockMember: \n    {\n      id: nanoid(),\n      index: 1,\n      length: 90,\n      qty: 3\n    }\n}\n\nfunction App() {\n  const [cutMembers, setCutMembers] = useState(initialData.cutMembers)\n  const [stockMember, setStockMember] = useState(initialData.stockMember)\n\n  const handelUpdateCutMembers = newCutMember => {\n    const newCutMembers = cutMembers.map(\n      cutMember => {\n        if(cutMember.id === newCutMember.id) {\n          return ({\n            ...cutMember,\n            ...newCutMember\n          })\n        } else {\n          return {...cutMember}\n        }\n      }\n    )\n    setCutMembers(newCutMembers)\n  }\n\n  const handelUpdateStockMember = newStockMember => {\n    setStockMember(newStockMember)\n  }\n\n  const handelAddCutMember = () => {\n    setCutMembers([\n      ...cutMembers,\n      {\n        id: nanoid(),\n        index: cutMembers.length + 1,\n        length: 0,\n        qty: 0\n      }\n    ])\n  }\n\n  const handelRemoveCutMember = deleteCutMember => {\n    console.log(deleteCutMember)\n    let newCutMembers = cutMembers.filter(cutMember => cutMember.id !== deleteCutMember.id)\n    newCutMembers = newCutMembers.map((cutMember, index) => {\n      return {\n        ...cutMember,\n        index: index + 1\n      }\n    })\n\n    setCutMembers(newCutMembers)\n  }\n\n  const actions = {\n    updateCutMembers: handelUpdateCutMembers,\n    updateStockMember: handelUpdateStockMember,\n    addCutMember: handelAddCutMember,\n    removeCutMember: handelRemoveCutMember\n  }\n\n  return (\n    <div className={styles.App}>\n      <AppHeader />\n      <div className={styles.AppMain}>\n        <div className={styles.AppMenu}>\n          <MemberList cutMembers={cutMembers} actions={actions} />\n          <StockList stockMember={stockMember} actions={actions} />\n        </div>\n        <CutList cutMembers={cutMembers} stockMember={stockMember}/>\n      </div>\n    </div>\n  );\n}\n\nconst AppHeader = () => {\n  return (\n    <div className={styles.AppHeader}>\n      <h1>CUT CALC</h1>\n    </div>\n  )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MemberList\":\"MemberList_MemberList__16O5o\",\"MemberTable\":\"MemberList_MemberTable__1LB7i\",\"MemberHeader\":\"MemberList_MemberHeader__1COe9\",\"MemberTableItem\":\"MemberList_MemberTableItem__2NAC6\",\"MemberTableDelete\":\"MemberList_MemberTableDelete__2GGxF\",\"MemberTableID\":\"MemberList_MemberTableID__y51TE\",\"MemberBody\":\"MemberList_MemberBody__2_blI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"StockList\":\"StockList_StockList__3e1s0\",\"StockTable\":\"StockList_StockTable__2q2Yy\",\"StockHeader\":\"StockList_StockHeader__1HLDl\",\"StockTableItem\":\"StockList_StockTableItem__3vmq2\",\"StockTableID\":\"StockList_StockTableID__ksH8Q\",\"StockBody\":\"StockList_StockBody__3wJPQ\"};"],"sourceRoot":""}